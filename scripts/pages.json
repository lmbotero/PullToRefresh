[{"name":"constructor(isRefreshing: Boolean, onRefresh: () -> Unit)","description":"io.github.lmbotero.pulltorefresh.util.RefreshStateEvent.RefreshStateEvent","location":"pullToRefresh/io.github.lmbotero.pulltorefresh.util/-refresh-state-event/-refresh-state-event.html","searchKeys":["RefreshStateEvent","constructor(isRefreshing: Boolean, onRefresh: () -> Unit)","io.github.lmbotero.pulltorefresh.util.RefreshStateEvent.RefreshStateEvent"]},{"name":"data class RefreshStateEvent(val isRefreshing: Boolean, val onRefresh: () -> Unit)","description":"io.github.lmbotero.pulltorefresh.util.RefreshStateEvent","location":"pullToRefresh/io.github.lmbotero.pulltorefresh.util/-refresh-state-event/index.html","searchKeys":["RefreshStateEvent","data class RefreshStateEvent(val isRefreshing: Boolean, val onRefresh: () -> Unit)","io.github.lmbotero.pulltorefresh.util.RefreshStateEvent"]},{"name":"fun BoxScope.DefaultIndicator(state: PullToRefreshState, isRefreshing: Boolean)","description":"io.github.lmbotero.pulltorefresh.ui.DefaultIndicator","location":"pullToRefresh/io.github.lmbotero.pulltorefresh.ui/-default-indicator.html","searchKeys":["DefaultIndicator","fun BoxScope.DefaultIndicator(state: PullToRefreshState, isRefreshing: Boolean)","io.github.lmbotero.pulltorefresh.ui.DefaultIndicator"]},{"name":"fun Modifier.handlePullToRefreshGestures(scope: CoroutineScope, state: PullToRefreshState, enabled: Boolean = true, onRefresh: () -> Unit, thresholdPx: Float): Modifier","description":"io.github.lmbotero.pulltorefresh.util.handlePullToRefreshGestures","location":"pullToRefresh/io.github.lmbotero.pulltorefresh.util/handle-pull-to-refresh-gestures.html","searchKeys":["handlePullToRefreshGestures","fun Modifier.handlePullToRefreshGestures(scope: CoroutineScope, state: PullToRefreshState, enabled: Boolean = true, onRefresh: () -> Unit, thresholdPx: Float): Modifier","io.github.lmbotero.pulltorefresh.util.handlePullToRefreshGestures"]},{"name":"fun PullToRefreshLayout(refreshStateEvent: RefreshStateEvent, modifier: Modifier = Modifier, enabled: Boolean = true, threshold: Dp = PullToRefreshDefaults.PositionalThreshold, state: PullToRefreshState = rememberPullToRefreshState(), indicator: BoxScope.() -> Unit = {\n        DefaultIndicator(\n            state = state,\n            isRefreshing = refreshStateEvent.isRefreshing,\n        )\n    }, content: BoxScope.() -> Unit)","description":"io.github.lmbotero.pulltorefresh.ui.PullToRefreshLayout","location":"pullToRefresh/io.github.lmbotero.pulltorefresh.ui/-pull-to-refresh-layout.html","searchKeys":["PullToRefreshLayout","fun PullToRefreshLayout(refreshStateEvent: RefreshStateEvent, modifier: Modifier = Modifier, enabled: Boolean = true, threshold: Dp = PullToRefreshDefaults.PositionalThreshold, state: PullToRefreshState = rememberPullToRefreshState(), indicator: BoxScope.() -> Unit = {\n        DefaultIndicator(\n            state = state,\n            isRefreshing = refreshStateEvent.isRefreshing,\n        )\n    }, content: BoxScope.() -> Unit)","io.github.lmbotero.pulltorefresh.ui.PullToRefreshLayout"]},{"name":"val isRefreshing: Boolean","description":"io.github.lmbotero.pulltorefresh.util.RefreshStateEvent.isRefreshing","location":"pullToRefresh/io.github.lmbotero.pulltorefresh.util/-refresh-state-event/is-refreshing.html","searchKeys":["isRefreshing","val isRefreshing: Boolean","io.github.lmbotero.pulltorefresh.util.RefreshStateEvent.isRefreshing"]},{"name":"val onRefresh: () -> Unit","description":"io.github.lmbotero.pulltorefresh.util.RefreshStateEvent.onRefresh","location":"pullToRefresh/io.github.lmbotero.pulltorefresh.util/-refresh-state-event/on-refresh.html","searchKeys":["onRefresh","val onRefresh: () -> Unit","io.github.lmbotero.pulltorefresh.util.RefreshStateEvent.onRefresh"]}]