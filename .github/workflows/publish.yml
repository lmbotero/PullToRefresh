name: Publish

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: "Version Name"
        required: true

jobs:
  publish:
    name: Publish
    runs-on: macos-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant Permission to Execute Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Publish Library
        run: |
          echo "Publishing and Releasing library ðŸš€"
          ./gradlew publish --no-configuration-cache 
          echo "Published and Released âœ…"
        env:
          ORG_GRADLE_PROJECT_VERSION_NAME: ${{ github.event.inputs.versionName }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}

      - name: Create and push tag
        run: |
          git config --global user.email "lmiguel1995@gmail.com"
          git config --global user.name "$GITHUB_ACTOR"

          VERSION_TAG="v${{ github.event.inputs.versionName }}"
          git tag -a "$VERSION_TAG" -m "Release $VERSION_TAG"
          git push origin "$VERSION_TAG"

      - name: Create Release on GitHub
        id: create_release
        uses: actions/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.versionName }}
          release_name: v${{ github.event.inputs.versionName }}
          draft: false
          prerelease: false
